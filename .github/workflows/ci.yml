name: QA Sandbox CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_DB: qa_sandbox
          POSTGRES_USER: qa_user
          POSTGRES_PASSWORD: qa_password
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: |
          frontend/package-lock.json
          tests-e2e/package-lock.json

    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Install Python dependencies
      run: |
        cd backend
        pip install -r requirements.txt

    - name: Install frontend dependencies
      run: |
        cd frontend
        npm ci

    - name: Install E2E test dependencies
      run: |
        cd tests-e2e
        npm ci

    - name: Run Django migrations
      run: |
        cd backend
        python manage.py migrate
      env:
        DB_HOST: localhost
        DB_NAME: qa_sandbox
        DB_USER: qa_user
        DB_PASSWORD: qa_password
        DB_PORT: 5432

    - name: Seed database
      run: |
        cd backend
        python manage.py seed_data
      env:
        DB_HOST: localhost
        DB_NAME: qa_sandbox
        DB_USER: qa_user
        DB_PASSWORD: qa_password
        DB_PORT: 5432

    - name: Start Django backend
      run: |
        cd backend
        python manage.py runserver 0.0.0.0:8000 &
        sleep 10
      env:
        DB_HOST: localhost
        DB_NAME: qa_sandbox
        DB_USER: qa_user
        DB_PASSWORD: qa_password
        DB_PORT: 5432

    - name: Build Angular frontend
      run: |
        cd frontend
        npm run build --prod

    - name: Start Angular frontend
      run: |
        cd frontend
        npm start &
        sleep 15

    - name: Wait for services to be ready
      run: |
        timeout 60 bash -c 'until curl -f http://localhost:8000/api/projects/; do sleep 2; done'
        timeout 60 bash -c 'until curl -f http://localhost:4200; do sleep 2; done'

    - name: Run E2E tests
      run: |
        cd tests-e2e
        npm run test:headless
      env:
        BROWSER: chrome-headless

    - name: Upload E2E test results
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: e2e-test-results
        path: tests-e2e/reports/

    - name: Upload screenshots on failure
      uses: actions/upload-artifact@v3
      if: failure()
      with:
        name: failure-screenshots
        path: tests-e2e/screenshots/

  docker-build:
    runs-on: ubuntu-latest
    needs: build-and-test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Build and test with Docker Compose
      run: |
        docker-compose up --build -d
        sleep 30
        docker-compose ps
        
    - name: Run health checks
      run: |
        timeout 60 bash -c 'until curl -f http://localhost:8000/api/projects/; do sleep 2; done'
        timeout 60 bash -c 'until curl -f http://localhost:4200; do sleep 2; done'
        echo "âœ… All services are healthy"

    - name: Cleanup
      run: |
        docker-compose down -v 